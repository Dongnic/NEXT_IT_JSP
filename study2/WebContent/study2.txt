계층화 아키텍처 

1. Presentation  :  view (jsp, mustache, Thymeleaf)
	- 화면
	- JSP, Mustache, Thymeleaf는 템플릿 엔진 : HTML 만드는 도구
	 
2. Controller layer : Controller
	- 요청처리, 흐름제어
	(지금은 .jsp로 직접 요청하지만, 나중에는 jsp화면이 보이기전에 여러가지 작업을 한 다음
	jsp화면으로 이동)
	
3. Business Layer  :  Service
	- 비즈니스로직, Transaction
	
4. Persistence(영속성) Layer  :  DAO
	- DB접근, 오로지 DB접근
	
5. Domain Layer  :  VO, DTO
	- DB에서 얻은 객체
------------------------------------------------------------------------------------------------
계층화 하는 이유
1. 효율성 : 시간(자바파일 실행하는 시간 <<< DB데이터 가지고오는 시간, )
		    저장공간(JVM의 메모리, but 신경 안써도 됨 : 요즘 램 좋음, 자바에서 알아서 비움)
2 .유지보수(확장)
	- 변경에 유연하다. (변경사항이 있을 때 코드를 얼마나 바꿔야 하나???)
	
------------------------------------------------------------------------------------------------
최종목표 : JSP에서 자바 소스코드 안 보이기(99% 정도)...